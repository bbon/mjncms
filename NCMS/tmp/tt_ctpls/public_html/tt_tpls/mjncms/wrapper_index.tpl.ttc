use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1268816017',
        'name' => 'wrapper_index.tpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 10 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    if (!($stash->get(['TT_VARS', 0, 'make_it_simple', 0]))) {
#line 2 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $stash->set(['TT_VARS', 0, 'title', 0], $stash->get(['TT_VARS', 0, 'site_name', 0]), 1);
    $output .=  "<!DOCTYPE html\n	PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n	 \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"";
#line 6 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $output .=  $stash->get(['TT_VARS', 0, 'html_lang', 0]);
    $output .=  "\" xml:lang=\"";
#line 6 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $output .=  $stash->get(['TT_VARS', 0, 'xml_lang', 0]);
    $output .=  "\">\n	<head>\n		<title>";
#line 8 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $output .=  $stash->get(['TT_VARS', 0, 'title', 0]);
    $output .=  "</title>\n		<meta http-equiv=\"Content-Type\" content=\"text/html; charset=";
#line 9 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $output .=  $stash->get(['TT_VARS', 0, 'html_charset', 0]);
    $output .=  "\" />\n		";
    }
    
#line 16 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    if ($stash->get(['TT_VARS', 0, 'CSS', 0, 'size', 0])) {
    $output .=  "				";
#line 12 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $stash->set(['TT_VARS', 0, 'CSS', 0], $stash->get(['TT_CALLS', 0, 'sort_jscss', [ $stash->get(['TT_VARS', 0, 'CSS', 0]) ]]));
    $output .=  "				";
#line 15 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['TT_VARS', 0, 'CSS', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'css_url'} = $_tt_value;
    $output .=  "\n					<link rel=\"stylesheet\" type=\"text/css\" href=\"";
#line 14 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('css_url');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" />";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "			";
    }
    
#line 22 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    if ($stash->get(['TT_VARS', 0, 'JS', 0, 'size', 0])) {
    $output .=  "				";
#line 18 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $stash->set(['TT_VARS', 0, 'JS', 0], $stash->get(['TT_CALLS', 0, 'sort_jscss', [ $stash->get(['TT_VARS', 0, 'JS', 0]) ]]));
    $output .=  "				";
#line 21 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['TT_VARS', 0, 'JS', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'js_url'} = $_tt_value;
    $output .=  "\n					<script src=\"";
#line 20 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('js_url');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" type=\"text/javascript\"></script>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "			";
    }
    
#line 27 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    if (!($stash->get(['TT_VARS', 0, 'make_it_simple', 0]))) {
    $output .=  "\n		<meta name=\"robots\" content=\"";
#line 24 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    if (!($stash->get(['TT_VARS', 0, 'ROBOTS_NOINDEX', 0]))) {
    $output .=  "index";
    }
    else {
    $output .=  "noindex";
    }
    
    $output .=  ",";
#line 24 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    if (!($stash->get(['TT_VARS', 0, 'ROBOTS_NOFOLLOW', 0]))) {
    $output .=  "follow";
    }
    else {
    $output .=  "nofollow";
    }
    
    $output .=  "\" />\n	</head>\n	<body id=\"body_container_id\">\n		";
    }
    
#line 28 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    $output .=  $stash->get('content');
#line 32 "../public_html/tt_tpls/mjncms/wrapper_index.tpl"
    if (!($stash->get(['TT_VARS', 0, 'make_it_simple', 0]))) {
    $output .=  "\n	</body>\n</html>";
    }
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
