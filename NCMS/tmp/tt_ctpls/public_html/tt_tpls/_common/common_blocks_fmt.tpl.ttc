use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1271573470',
        'name' => 'common_blocks_fmt.tpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    # USE
    $stash->set('loc',
                $context->plugin('loc'));
#line 2 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $output .=  $stash->get(['TT_CALLS', 0, 'register_tt_call', [ 'content', 'content_get_blocks' ]]);
    $output .=  "\n";
#line 17 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    if ($stash->get('t_block_alias')) {
    $output .=  "    ";
#line 10 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $stash->set('t_block_aliases', [ ]);
    $output .=  "    ";
#line 11 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $stash->set('t_block_ids', [ ]);
    $output .=  "    ";
#line 12 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $stash->set('t_block_aliases', $stash->get(['t_block_aliases', 0, 'merge', [ [ $stash->get('t_block_alias') ] ]]));
    }
    elsif ($stash->get('t_block_id')) {
    $output .=  "    ";
#line 14 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $stash->set('t_block_aliases', [ ]);
    $output .=  "    ";
#line 15 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $stash->set('t_block_ids', [ ]);
    $output .=  "    ";
#line 16 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $stash->set('t_block_ids', $stash->get(['t_block_ids', 0, 'merge', [ [ $stash->get('t_block_id') ] ]]));
    }
    
    $output .=  "\n";
#line 21 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    if (!($stash->get(['t_block_aliases', 0, 'size', 0]) || $stash->get(['t_block_ids', 0, 'size', 0]))) {
    $output .=  "    ";
#line 19 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['loc', [ 'No block aliases/ids defined' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    ";
#line 20 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $context->throw('return', '', \$output);
    }
    
    $output .=  "\n";
#line 22 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $stash->set('res', $stash->get(['TT_CALLS', 0, 'content_get_blocks', [ { 'block_ids' => $stash->get('t_block_ids'), 'alias' => $stash->get('t_block_aliases')  } ]]));
#line 33 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['res', 0, 'blocks', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'block'} = $_tt_value;
    $output .=  "    ";
#line 32 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    if ($stash->get(['block', 0, 'is_active', 0])) {
    $output .=  "        ";
#line 30 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    if ($stash->get(['block', 0, 'show_header', 0])) {
    $output .=  "<h4>";
#line 30 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['block', 0, 'header', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</h4>";
    }
    
    $output .=  "        ";
#line 31 "../public_html/tt_tpls/_common/common_blocks_fmt.tpl"
    $output .=  $stash->get(['block', 0, 'body', 0]);
    $output .=  "\n    ";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
